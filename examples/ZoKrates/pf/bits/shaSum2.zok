def rotr32<N>(u32 x) -> u32:
    return (x >> N) | (x << (32 - N))

def main(u32 a, u32 b, u32 c) -> u32:
    // maj := (a and b) xor (a and c) xor (b and c)
    u32 maj = (a & b) ^ (a & c) ^ (b & c)

    // S0 := (a rightrotate 2) xor (a rightrotate 13) xor (a rightrotate 22)
    u32 S0 = rotr32::<2>(a) ^ rotr32::<13>(a) ^ rotr32::<22>(a)

    // temp2 := S0 + maj
    return S0 + maj
